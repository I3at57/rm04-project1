)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
data("diamonds")
summary(diamonds)
glimpse(diamonds)
# Tester l'histogramme du prix
#
ggplot(
data = diamonds,
mapping = aes(x = price)
)+
geom_histogram()+
labs(
x = "Prix des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
ggplot(
data = diamonds,
mapping = aes(x = price)
)+
geom_histogram(bins = 10)+
labs(
x = "Prix des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
ggplot(
data = diamonds,
mapping = aes(x = price)
)+
geom_histogram(bins = 100)+
labs(
x = "Prix des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
ggplot(
data = diamonds,
mapping = aes(x = price)
)+
geom_histogram(bins = 200)+
labs(
x = "Prix des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
ggplot(
data = diamonds[diamonds$price < 5000,],
mapping = aes(x = price)
)+
geom_histogram(bins = 100)+
labs(
x = "Prix des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
ggplot(
data = diamonds[diamonds$price < 5000,],
mapping = aes(x = price)
)+
geom_density()+
labs(
x = "Prix des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
ggplot(
data = diamonds,
mapping = aes(x,y)
)+
geom_point()+
stat_smooth(method = lm)+
labs(
x = "Largeur", y = "Longeur",
title = "Largeur x Longueur"
)
ggplot(
data = diamonds[(diamonds$x>3 & diamonds$y < 20),],
mapping = aes(x,y)
)+
geom_point()+
stat_smooth(method = lm)+
labs(
x = "Largeur", y = "Longeur",
title = "Largeur x Longueur"
)
ggplot(
data = diamonds,
mapping = aes(x = carat, y = price, color = clarity)
)+
geom_point()+
labs(
x = "Carat", y = "Prix",
title = "Carat x Prix"
)
ggplot(
data = diamonds,
mapping = aes(x = carat, y = price, color = clarity)
)+
geom_point()+
geom_smooth()+
labs(
x = "Carat", y = "Prix",
title = "Carat x Prix"
)
diamonds %>% select(carat,price,clarity) %>% pairs()
ggplot(
data = diamonds,
mapping = aes(x = carat, y = price, color = clarity)
)+
geom_point()+
stat_smooth(method = lm)+
labs(
x = "Carat", y = "Prix",
title = "Carat x Prix"
)
ggplot(
data = diamonds,
mapping = aes(x = carat, y = price)
)+
geom_point()+
facet_wrap(~ clarity)+
stat_smooth()+
labs(
x = "Carat", y = "Prix",
title = "Carat x Prix"
)
ggplot(
data = diamonds,
mapping = aes(x = carat, y = price)
)+
geom_point()+
facet_wrap(~ clarity)+
stat_smooth(method = lm)+
labs(
x = "Carat", y = "Prix",
title = "Carat x Prix"
)
ggplot(
data = diamonds,
mapping = aes(x = carat, y = price)
)+
geom_point()+
facet_grid(~ clarity)+
stat_smooth(method = lm)+
labs(
x = "Carat", y = "Prix",
title = "Carat x Prix"
)
ggplot(
data = diamonds,
mapping = aes(x = cut, y = price)
)+
geom_violin()+
labs(title = "Distribution du prix selon la coupe des diamants")
ggplot(
data = diamonds[diamonds$price < 5000,],
mapping = aes(x = price, fill = cut)
)+
geom_histogram(bins = 100)+
labs(
x = "Prix des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
rm(diamonds)
diamonds
ggplot(
data = group_by(diamonds),
mapping = aes(x = color, y = mean(price))
)+
geom_col()+
labs(
x = "Couleurs des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
ggplot(
data = diamonds,
mapping = aes(x = color, y = mean(price))
)+
geom_col()+
labs(
x = "Couleurs des diamants", y = "Nombre de diamant",
title = "Distribution du prix des diamands"
)
?group_by
# Calcule la moyenne de prix par couleur
diamonds %>% group_by(color) %>% mutate(av_price_color = mean(price)) %>% ggplot(aes(x = color, y = av_price_color)) + geom_col()
# Calcule la moyenne de prix par couleur
diamonds %>%
group_by(color) %>%
mutate(av_price_color = mean(price)) %>%
ggplot(
aes(x = color, y = av_price_color))+
geom_col()
# Calcule la moyenne de prix par couleur
diamonds %>%
group_by(color) %>%
mutate(av_price_color = mean(price)) %>%
ggplot(
aes(x = color, y = av_price_color))+
geom_col()
rm(diamonds2)
# Calcule la moyenne de prix par couleur
diamonds %>%
group_by(color) %>%
mutate(av_price_color = mean(price)) %>%
ggplot(
aes(x = color, y = av_price_color))+
geom_col()
setwd("D:/Travail/UTT/Semestres/GI04/RM04/Projets")
# Block de code utilisé pour construire les fonctions utiles à la
# réalisation des exercices
date_panne_systeme <- function(n = 10, lambda = 0.1) {
# Fonction qui simule la date de panne d'un système à
# n composants
return(max(rexp(n,lambda)))
}
date_panne_systeme()
date_panne_systeme()
date_panne_systeme()
rexp(10,0.1)
max(rexp(10,0.1))
max(rexp(10,0.1))
max(rexp(10,0.1))
max(rexp(10,0.1))
date_panne_systeme()
date_panne_systeme()
# Block de code utilisé pour construire les fonctions utiles à la
# réalisation des exercices
date_panne_systeme <- function(n = 10, lambda = 0.1, struct = "parallele") {
# Fonction qui simule la date de panne d'un système à
# n composants iid de type parallele ou serie
if (struct == "parallele") {
return(max(rexp(n,lambda)))
} else if (struct == "serie") {
return(min(rexp(n,lambda)))
} else {
return("error")
}
}
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
rexp
rexp?
?rexp
?rexp
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
date_panne_systeme(struct = "serie")
# Block de code utilisé pour construire les fonctions utiles à la
# réalisation des exercices
panne_sys_exp <- function(n = 10, lambda = 0.1, struct = "parallele") {
# Fonction qui simule la date de panne d'un système à
# n composants iid de type parallele ou serie
if (struct == "parallele") {
return(max(rexp(n,lambda)))
} else if (struct == "serie") {
return(min(rexp(n,lambda)))
} else {
return("error")
}
}
MTTF_syst <- function(nbr_simulation = 10000, loi_sys = panne_sys_exp)
replicate(10000,panne_sys_exp())
mean(replicate(10000,panne_sys_exp()))
# Block de code utilisé pour construire les fonctions utiles à la
# réalisation des exercices
panne_sys_exp <- function(n = 10, lambda = 0.1, struct = "parallele") {
# Fonction qui simule la date de panne d'un système à
# n composants iid de type parallele ou serie
if (struct == "parallele") {
return(max(rexp(n,lambda)))
} else if (struct == "serie") {
return(min(rexp(n,lambda)))
} else {
return("error")
}
}
MTTF_syst <- function(nbr_simulation = 10000,
loi_sys = panne_sys_exp) {
return(replicate(nbr_simulation,panne_sys_exp()))
}
MTTF_syst()
# Block de code utilisé pour construire les fonctions utiles à la
# réalisation des exercices
panne_sys_exp <- function(n = 10, lambda = 0.1, struct = "parallele") {
# Fonction qui simule la date de panne d'un système à
# n composants iid de type parallele ou serie
if (struct == "parallele") {
return(max(rexp(n,lambda)))
} else if (struct == "serie") {
return(min(rexp(n,lambda)))
} else {
return("error")
}
}
MTTF_syst <- function(nbr_simulation = 10000,
loi_sys = panne_sys_exp) {
return(mean(replicate(nbr_simulation,panne_sys_exp())))
}
MTTF_syst()
MTTF_syst()
MTTF_syst()
MTTF_syst()
MTTF_syst()
MTTF_syst()
MTTF_syst()
MTTF_syst()
log(10)+0.57
(log(10)+0.57)*10
log(10)+0.57
MTTF_syst()
# Block de code utilise pour l'initialisation du rapport
# Chunk de code utile pour la compilation du markdown
knitr::opts_chunk$set(echo = TRUE)
#packages utiles en R
library(tidyverse)
# Chargements de fonctions personnelles rédigée dans le cadre du projet
source("./fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
rexp(1, 0.1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 1)
rexp(1, 0.1)
rexp(1, 0.1)
rexp(1, 0.1)
? rexp
? case
? rexp
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
simu_date_pane_composant("exp",list(0.1))
simu_date_pane_composant("exp",list("lambda" = 0.1))
simu_date_pane_composant("exp", list("lambda" = 0.1))
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
simu_date_pane_composant("exp", list("lambda" = 0.1))
list(lambda = 0.1)
list(lambda = 0.1)["lambda"]
rexp(1,list(lambda = 0.1)["lambda"])
rexp(1,c(list(lambda = 0.1)["lambda"]))
rexp(1,c(list(lambda = 0.1)$lambda"))
rexp(1,c(list(lambda = 0.1)$lambda")
rexp(1,c(list(lambda = 0.1)$lambda"))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
rexp(1,c(list(lambda = 0.1)$lambda))
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
simu_date_pane_composant()
simu_date_pane_composant("exp",list("lambda" = 0.1))
simu_date_pane_composant("exp",list("lambda" = 0.0001))
simu_date_pane_composant("exp",list("lambda" = 0.0001))
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
plot(seq(0,100,0.01),qexp(seq(0,100,0.01),0.1))
? seq
? qexp
plot(seq(0,100,0.01),dexp(seq(0,100,0.01),0.1))
plot(seq(0,100,0.01),dexp(seq(0,100,0.01),0.1), type = 'l')
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
plot(seq(0,100,0.01),dexp(seq(0,100,0.01),0.1), type = 'l')
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R", echo=TRUE)
verif
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
tibble(seq(0,100,0.01),pexp(seq(0,100,0.01),0.01)
tibble(seq(0,100,0.01),pexp(seq(0,100,0.01),0.01))
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R", echo=TRUE)
verif
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R", echo=TRUE)
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
replicate(200,simu_date_pane_composant())
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
library(ggplot2)
# Example data
x <- 1:10
y <- x^2
# Creating a ggplot object
p <- ggplot() +
geom_line(aes(x, y))  # Plotting as lines
# Adding a single point at x = 5, y = 25
p + geom_point(x = 5, y = 25, color = "red", shape = 16)
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
? plot
? points
? points
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
? dplyr::tibble()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
t = seq(0,500,0.01)
exp_density <- dexp(t,0.01)
simu <- replicate(200,simu_date_pane_composant(param = list(lambda = 0.01)))
plot(t, exp_density, type =)
plot(t, exp_density, type =)
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
rlang::last_trace()
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
verif()
verif()
verif()
verif()
verif()
verif()
verif()
verif()
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
ggplot() +
geom_line(aes(t,exp_density)) +
geom_point(aes(simu, dexp(simu,0.01)), color = "red")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
source("D:/Travail/UTT/Semestres/GI04/RM04/Projets/fonctions_sdf.R")
verif()
# Block de code utilise pour l'initialisation du rapport
# Chunk de code utile pour la compilation du markdown
knitr::opts_chunk$set(echo = TRUE)
#packages utiles en R
library(tidyverse)
# Chargements de fonctions personnelles rédigée dans le cadre du projet
source("./fonctions_sdf.R")
verif()
setwd("D:/Travail/UTT/Semestres/GI04/RM04/Projets")
verif()
